<?xml version="1.0"?>
<ruleset name="Custom Standard">

	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="PSR1.Methods.CamelCapsMethodName"/>
	
	<!-- Must use elseif instead of else if -->
	<rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
	
	<!-- All statements should be on a new line (false: $foo = 1;$bar = 2;) -->
	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
	
	<!-- Must use elseif instead of else if -->
	<rule ref="Squiz.Classes.ClassDeclaration"/>
	<rule ref="PEAR.ControlStructures.MultiLineCondition"/>
	<rule ref="Squiz.Classes.ValidClassName"/>
	<rule ref="PEAR.NamingConventions.ValidVariableName"/>
	
	<rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.UpperCaseConstant"/>
	<rule ref="Squiz.Classes.DuplicateProperty"/>
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
	
	<rule ref="Brightzone.ControlStructures.ControlSignature"/>

	<rule ref="PEAR.Commenting.ClassComment"/>
	<rule ref="PEAR.Commenting.FunctionComment"/>
	<rule ref="PEAR.Commenting.InlineComment"/>
	
	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
	<rule ref="Squiz.Classes.SelfMemberReference"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement"/>
	<rule ref="Generic.ControlStructures.InlineControlStructure"/>
	<rule ref="Generic.Files.LineEndings"/>
	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>
	

</ruleset>
